<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="Chameleon" xmlns:ivy="antlib:org.apache.ivy.ant">
  <property file="properties"/>
  <property file="default.properties"/>

  <path id="ivy.lib.path">
    <fileset file="${ivy.jar}"/>
    <fileset file="lib/jsch-0.1.45.jar"/>
  </path>

  <taskdef resource="org/apache/ivy/ant/antlib.xml"
           uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>

  <property environment="env"/>
  <property name="target" value="1.6"/>
  <property name="source" value="1.6"/>
  <property name="debuglevel" value="lines,vars,source"/>
  <property name="dist" value="dist"/>
  <property name="dist.local" value="dist/local"/>
  <property name="lib" value="lib"/>
  <property name="bin" value="${dist}/bin"/>
  <property name="dist.jar" value="${dist}/jar"/>
  <property name="dist.local.jar" value="${dist.local}/jar"/>
  <property name="src" value="src"/>
  <property name="build" value="build"/>
  <property name="srcForDoc" value="${build}/src_for_doc"/>
  <property name="api" value="${build}/api"/>

  <target name="bootstrap">
    <ivy:settings file="ivy/generic_ivy_settings.xml"/>
    <ivy:resolve file="ivy/bootstrap.xml"/>
    <ivy:retrieve/>
  </target>

  <target name="init-ivy">
    <ivy:settings file="ivy/ivysettings.xml"/>
    <ivy:resolve file="ivy/ivy.xml"/>
    <ivy:retrieve/>
    <ivy:buildnumber organisation="distrinet.cs.kuleuven.be" module="chameleon"/>
    <ivy:cachepath pathid="ivy.classpath" conf="default" />
    <path id="project.classpath">
      <path refid="ivy.classpath"/>
      <fileset dir="${eclipse.home}">
        <include name="**/*.jar"/>
      </fileset>
    </path>
  </target>

  <target name="init" depends="init-ivy">
    <mkdir dir="${dist}"/>
    <mkdir dir="${bin}"/>
    <mkdir dir="${dist.jar}"/>
    <mkdir dir="${dist.local}"/>
    <mkdir dir="${dist.local.jar}"/>
    <mkdir dir="${build}"/>

    <copy includeemptydirs="false" todir="${bin}">
      <fileset dir="${src}">
        <exclude name="**/*.launch"/>
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>

  <target name="clean">
    <delete dir="${dist}"/>
    <delete dir="${build}"/>
  </target>

  <!--<target name="doc" depends="init">-->
  <target name="prepdoc" depends="init">
    <delete dir="${srcForDoc}"/>
    <copy todir="${srcForDoc}">
      <fileset dir="${src}"/>
    </copy>
  </target>

  <target name="delSingleLineComments" depends="prepdoc">
    <replaceregexp flags="g">
      <fileset dir="${srcForDoc}">
        <include name="**/*.java"/>
      </fileset>
      <regexp pattern="//.*"/>
      <substitution expression=""/>
    </replaceregexp>
  </target>

  <target name="keywordResult" depends="delSingleLineComments">
    <replaceregexp flags="g">
      <fileset dir="${srcForDoc}">
        <include name="**/*.java"/>
      </fileset>
      <regexp pattern="\\result"/>
      <substitution expression="&lt;b&gt; &#92;result&lt;/b&gt; "/>
    </replaceregexp>
  </target>

  <target name="linkStart" depends="keywordResult">
    <replaceregexp flags="g">
      <fileset dir="${srcForDoc}">
        <include name="**/*.java"/>
      </fileset>
      <regexp pattern="\*/(\s)*/\*@"/>
      <substitution expression="&lt;div&gt;"/>
    </replaceregexp>
  </target>

  <target name="replaceStart" depends="linkStart">
    <replaceregexp flags="g">
      <fileset dir="${srcForDoc}">
        <include name="**/*.java"/>
      </fileset>
      <regexp pattern="/\*@"/>
      <substitution expression="/** &lt;div&gt;"/>
    </replaceregexp>
  </target>

  <target name="replaceEnd" depends="replaceStart">
    <replaceregexp flags="g">
      <fileset dir="${srcForDoc}">
        <include name="**/*.java"/>
      </fileset>
      <regexp pattern="@\*/"/>
      <substitution expression="#!#!#!# &lt;/div&gt; */"/>
    </replaceregexp>
  </target>

  <target name="placePreMarker" depends="replaceEnd">
    <replaceregexp flags="gs" byLine="false">
      <fileset dir="${srcForDoc}">
        <include name="**/*.java"/>
      </fileset>
      <regexp pattern="@\s*pre"/>
      <substitution expression="#!#!#!# @ pre"/>
    </replaceregexp>
  </target>

  <target name="placePostMarker" depends="placePreMarker">
    <replaceregexp flags="gs" byLine="false">
      <fileset dir="${srcForDoc}">
        <include name="**/*.java"/>
      </fileset>
      <regexp pattern="\s*@\s*post"/>
      <substitution expression="#!#!#!# @ post"/>
    </replaceregexp>
  </target>

  <target name="replacePost" depends="placePostMarker">
    <replaceregexp flags="gs" byLine="false">
      <fileset dir="${srcForDoc}">
        <include name="**/*.java"/>
      </fileset>
      <regexp pattern="@ post(.*?)#!#!#!#"/>
      <substitution expression="&lt;font color=&quot;green&quot;&gt; &lt;pre&gt; &lt;b&gt; post &lt;/b&gt; \1 &lt;/pre&gt; &lt;/font&gt; &lt;br/&gt; ${line.separator}"/>
    </replaceregexp>
  </target>

  <target name="cleanup" depends="replacePost">
    <replaceregexp flags="gm" byLine="false">
      <fileset dir="${srcForDoc}">
        <include name="**/*.java"/>
      </fileset>
      <regexp pattern="\s*@(\s*#!#!#!#\s*|\s+)"/>
      <substitution expression=""/>
    </replaceregexp>
  </target>

  <target name="doc" depends="cleanup">
    <delete dir="${api}"/>
    <javadoc
      destdir="${api}"
      author="true"
      version="true"
      use="true"
      windowtitle="Chameleon API">

      <fileset dir="${srcForDoc}" defaultexcludes="yes">
        <include name="**/*.java"/>
        <!-- <exclude name="com/dummy/test/doc-files/**"/> -->
      </fileset>

      <doctitle><![CDATA[<h1>Chameleon API documentation</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2001-2012 KU Leuven</i>]]></bottom>
      <tag name="todo" scope="all" description="To do:"/>
      <!-- <group title="Group 1 Packages" packages="com.dummy.test.a*"/>
      <group title="Group 2 Packages" packages="com.dummy.test.b*:com.dummy.test.c*"/>-->
      <!-- <link offline="true" href="http://download.oracle.com/javase/6/docs/api/" packagelistLoc="C:\tmp"/> -->
      <link href="http://people.cs.kuleuven.be/marko.vandooren/chameleon/api/"/>
    </javadoc>
  </target>

  <target name="compile" depends="init">
    <javac debug="true" debuglevel="${debuglevel}" destdir="${bin}" source="${source}" target="${target}">
      <src path="${src}"/>
      <classpath refid="project.classpath"/>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <jar jarfile="${dist.local.jar}/chameleon-local.jar" basedir="${bin}"        includes="**"/>
  </target>

  <target name="build" depends="jar">
  </target>

  <target name="build-version" depends="compile">
    <fail unless="version" message="You must provide a version with the       command line argument -Dversion=major.minor.micro"/>
    <jar jarfile="${dist.jar}/chameleon-${version}.jar" basedir="${bin}"         includes="**"/>
    <echo message="${ant.project.name}: ${ant.file}"/>
  </target>

  <target name="publish" depends="build-version">
    <ivy:publish resolver="pubchameleon" pubrevision="${version}"             overwrite="true">
      <artifacts pattern="${dist.jar}/[artifact]-[revision].[ext]"/>
    </ivy:publish>
  </target>
</project>
