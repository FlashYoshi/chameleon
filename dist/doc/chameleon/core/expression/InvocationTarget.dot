#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// chameleon.core.expression.InvocationTargetWithTarget<E extends chameleon.core.expression.InvocationTargetWithTarget>
	c8041 [label=<<table title="chameleon.core.expression.InvocationTargetWithTarget" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./InvocationTargetWithTarget.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> InvocationTargetWithTarget&lt;E extends InvocationTargetWithTarget&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.expression.InvocationTarget<E extends chameleon.core.expression.InvocationTarget, P extends chameleon.core.element.Element>
	c8042 [label=<<table title="chameleon.core.expression.InvocationTarget" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./InvocationTarget.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> InvocationTarget&lt;E extends InvocationTarget, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.expression.Expression<E extends chameleon.core.expression.Expression>
	c8044 [label=<<table title="chameleon.core.expression.Expression" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Expression.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Expression&lt;E extends Expression&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.NamespaceElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c8095 [label=<<table title="chameleon.core.namespace.NamespaceElementImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespace/NamespaceElementImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> NamespaceElementImpl&lt;E extends Element, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element>
	c8132 [label=<<table title="chameleon.core.statement.ExceptionSource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../statement/ExceptionSource.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ExceptionSource&lt;E extends ExceptionSource, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//chameleon.core.expression.InvocationTargetWithTarget<E extends chameleon.core.expression.InvocationTargetWithTarget> extends chameleon.core.expression.InvocationTarget<E, chameleon.core.element.Element>
	c8042:p -> c8041:p [dir=back,arrowtail=empty];
	//chameleon.core.expression.InvocationTarget<E extends chameleon.core.expression.InvocationTarget, P extends chameleon.core.element.Element> extends chameleon.core.namespace.NamespaceElementImpl<E, P>
	c8095:p -> c8042:p [dir=back,arrowtail=empty];
	//chameleon.core.expression.InvocationTarget<E extends chameleon.core.expression.InvocationTarget, P extends chameleon.core.element.Element> implements chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element>
	c8132:p -> c8042:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.expression.Expression<E extends chameleon.core.expression.Expression> extends chameleon.core.expression.InvocationTarget<E, chameleon.core.element.Element>
	c8042:p -> c8044:p [dir=back,arrowtail=empty];
}

