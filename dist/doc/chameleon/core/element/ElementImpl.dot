#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// chameleon.core.compilationunit.CompilationUnit
	c6354 [label=<<table title="chameleon.core.compilationunit.CompilationUnit" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../compilationunit/CompilationUnit.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CompilationUnit </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.declaration.StubDeclarationContainer<T extends chameleon.core.declaration.Declaration>
	c6356 [label=<<table title="chameleon.core.declaration.StubDeclarationContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../declaration/StubDeclarationContainer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StubDeclarationContainer&lt;T extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.element.ElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6362 [label=<<table title="chameleon.core.element.ElementImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ElementImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ElementImpl&lt;E extends Element, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6363 [label=<<table title="chameleon.core.element.Element" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Element.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Element&lt;E extends Element, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.lookup.StubContextElement
	c6386 [label=<<table title="chameleon.core.lookup.StubContextElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../lookup/StubContextElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> StubContextElement </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.modifier.ModifierImpl<E extends chameleon.core.modifier.Modifier, P extends chameleon.core.element.Element>
	c6415 [label=<<table title="chameleon.core.modifier.ModifierImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../modifier/ModifierImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ModifierImpl&lt;E extends Modifier, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.NamespaceElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6425 [label=<<table title="chameleon.core.namespace.NamespaceElementImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespace/NamespaceElementImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> NamespaceElementImpl&lt;E extends Element, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.Namespace
	c6428 [label=<<table title="chameleon.core.namespace.Namespace" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespace/Namespace.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Namespace </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeParameterBlock.Stub
	c6486 [label=<<table title="chameleon.core.type.generics.TypeParameterBlock.Stub" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/generics/TypeParameterBlock.Stub.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Stub </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeConstraint<E extends chameleon.core.type.generics.TypeConstraint>
	c6489 [label=<<table title="chameleon.core.type.generics.TypeConstraint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/generics/TypeConstraint.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> TypeConstraint&lt;E extends TypeConstraint&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.ActualTypeArgument<E extends chameleon.core.type.generics.ActualTypeArgument>
	c6504 [label=<<table title="chameleon.core.type.generics.ActualTypeArgument" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/generics/ActualTypeArgument.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ActualTypeArgument&lt;E extends ActualTypeArgument&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.inheritance.InheritanceRelation<E extends chameleon.core.type.inheritance.InheritanceRelation>
	c6506 [label=<<table title="chameleon.core.type.inheritance.InheritanceRelation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/inheritance/InheritanceRelation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> InheritanceRelation&lt;E extends InheritanceRelation&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//chameleon.core.compilationunit.CompilationUnit extends chameleon.core.element.ElementImpl<chameleon.core.compilationunit.CompilationUnit, chameleon.core.element.Element>
	c6362:p -> c6354:p [dir=back,arrowtail=empty];
	//chameleon.core.declaration.StubDeclarationContainer<T extends chameleon.core.declaration.Declaration> extends chameleon.core.element.ElementImpl<chameleon.core.declaration.StubDeclarationContainer, chameleon.core.declaration.DeclarationContainer>
	c6362:p -> c6356:p [dir=back,arrowtail=empty];
	//chameleon.core.element.ElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6363:p -> c6362:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.lookup.StubContextElement extends chameleon.core.element.ElementImpl
	c6362:p -> c6386:p [dir=back,arrowtail=empty];
	//chameleon.core.modifier.ModifierImpl<E extends chameleon.core.modifier.Modifier, P extends chameleon.core.element.Element> extends chameleon.core.element.ElementImpl<E, P>
	c6362:p -> c6415:p [dir=back,arrowtail=empty];
	//chameleon.core.namespace.NamespaceElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element> extends chameleon.core.element.ElementImpl<E, P>
	c6362:p -> c6425:p [dir=back,arrowtail=empty];
	//chameleon.core.namespace.Namespace extends chameleon.core.element.ElementImpl<chameleon.core.namespace.Namespace, chameleon.core.namespace.Namespace>
	c6362:p -> c6428:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.TypeParameterBlock.Stub extends chameleon.core.element.ElementImpl<chameleon.core.type.generics.TypeParameterBlock.Stub, chameleon.core.type.Type>
	c6362:p -> c6486:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.TypeConstraint<E extends chameleon.core.type.generics.TypeConstraint> extends chameleon.core.element.ElementImpl<E, chameleon.core.element.Element>
	c6362:p -> c6489:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.ActualTypeArgument<E extends chameleon.core.type.generics.ActualTypeArgument> extends chameleon.core.element.ElementImpl<chameleon.core.type.generics.ActualTypeArgument, chameleon.core.type.generics.InstantiatedTypeParameter>
	c6362:p -> c6504:p [dir=back,arrowtail=empty];
	//chameleon.core.type.inheritance.InheritanceRelation<E extends chameleon.core.type.inheritance.InheritanceRelation> extends chameleon.core.element.ElementImpl<E, chameleon.core.type.Type>
	c6362:p -> c6506:p [dir=back,arrowtail=empty];
}

