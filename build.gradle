buildscript {
      dependencies {
          classpath 'be.jlr-home.gradle:plantumlPlugin:0.1.+'
          //classpath 'com.github.jruby-gradle:jruby-gradle-plugin:0.1.5'
      }
  repositories {
    mavenCentral()
    //jcenter()
  }
}

//apply plugin: 'com.github.jruby-gradle.base'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'plantuml'
//apply plugin: 'org.akhikhl.wuff.eclipse-ide-bundle'

sourceCompatibility = 1.8

configurations {
  pegdowndoclet
}

dependencies {
  pegdowndoclet 'ch.raffael.pegdown-doclet:pegdown-doclet:1.1'
  pegdowndoclet 'net.sourceforge.plantuml:plantuml:8020'

}

repositories {
  mavenCentral()
  maven {
    url 'http://users.ugent.be/~mcvdoore/repository'
  }
}

def docSrc = 'build/tmp/src_for_doc'

sourceSets {
  main {
        java {
            srcDir 'src'
            exclude 'org/aikodi/chameleon/eclipse/**'
       }
  }
  dok {
        java {
            srcDir docSrc
            exclude 'org/aikodi/chameleon/eclipse/**'
       }
  }
}

plantuml {
 sourcePath = docSrc
 sources=sourceSets.dok.java
}

dependencies {
  compile group: 'junit', name: 'junit', version: '4.+'
  compile group: 'com.google.guava', name: 'guava', version: '18.+'
  //compile project(':rejuse')
  compile group: 'markovandooren', name: 'rejuse', version: '1.3.0'
  compile group: 'org.antlr', name: 'antlr', version: '3.2'
  //compile "${eclipseMavenGroup}:org.eclipse.core.commands:+"
  
  //gems 'rubygems:asciidoctor-diagram:1.2.0'
}

task javadoc(type: Javadoc, overwrite: true) {
    source = sourceSets.dok.java
    options.docletpath = configurations.pegdowndoclet.files.asType(List)
    options.doclet = "ch.raffael.doclets.pegdown.PegdownDoclet"
    options.addStringOption "plantuml-config", "plantuml.skin"    
}

ant.importBuild 'doc.xml'
//javadoc.dependsOn tasks.plantuml
//tasks.plantuml.dependsOn prepareSourceForJavadoc
//javadoc.dependsOn jrubyPrepareGems 

task copyCode(type:Copy) {
  from sourceSets.main.java
  into docSrc
  include '**'
}

task copyDiagrams(type:Copy) {
  from docSrc
  into 'build/docs/javadoc'
  include '**/*.png'
}

task runPlantUML(type: JavaExec) {
  main = 'net.sourceforge.plantuml.Run'
  classpath configurations.pegdowndoclet
  args '-config', '"./plantuml.skin"', "${docSrc}/**"
}

task diagrams 

prepareSourceForJavadoc.dependsOn copyCode
javadoc.dependsOn prepareSourceForJavadoc
diagrams.dependsOn copyDiagrams
copyDiagrams.dependsOn runPlantUML
runPlantUML.dependsOn copyCode


configurations {
  deployerJars
}

dependencies {
   deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "scp://webssh.ugent.be/users/m/mcvdoore/WWW/repository/") {
            authentication(userName: "mcvdoore")
        }
        pom.version = '1.1.12'
        pom.groupId = 'markovandooren'
        pom.artifactId = 'chameleon'
    }
}

//configurations {
//    asciidoclet
//}

//dependencies {
//    asciidoclet 'org.asciidoctor:asciidoclet:1.5.2'
//}

//javadoc {
//    options.docletpath = configurations.asciidoclet.files.asType(List)
//    options.doclet = 'org.asciidoctor.Asciidoclet'
//    //options.overview = docSrc+'/overview.adoc'
//    options.addStringOption "-base-dir", "${projectDir}/build/docs/javadoc"
//    options.addStringOption "-require", "asciidoctor-diagram"
//    options.addStringOption "-gem-path", "${jrubyPrepareGems.outputDir}"
//    options.addStringOption "-attribute",
//            "name=${project.name}," +
//            "version=${project.version}," +
//            "imagesoutdir=doc-files/,"
//            "data-uri," +
//            "icons=font," +
//            "title-link=http://example.com[${project.name} ${project.version}]"
//}
