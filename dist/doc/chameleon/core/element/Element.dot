#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6527 [label=<<table title="chameleon.core.declaration.DeclarationContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../declaration/DeclarationContainer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> DeclarationContainer&lt;E extends DeclarationContainer, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.declaration.Declaration<E extends chameleon.core.declaration.Declaration<E, P, S, D>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, D extends chameleon.core.declaration.Declaration>
	c6528 [label=<<table title="chameleon.core.declaration.Declaration" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../declaration/Declaration.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Declaration&lt;E extends Declaration&lt;E, P, S, D&gt;, P extends DeclarationContainer, S extends Signature, D extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.element.ElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6529 [label=<<table title="chameleon.core.element.ElementImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ElementImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ElementImpl&lt;E extends Element, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530 [label=<<table title="chameleon.core.element.Element" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Element.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Element&lt;E extends Element, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.expression.Assignable<E extends chameleon.core.expression.Assignable, P extends chameleon.core.element.Element>
	c6543 [label=<<table title="chameleon.core.expression.Assignable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../expression/Assignable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Assignable&lt;E extends Assignable, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.method.exception.AnchoredDeclaration<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6581 [label=<<table title="chameleon.core.method.exception.AnchoredDeclaration" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../method/exception/AnchoredDeclaration.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> AnchoredDeclaration&lt;E extends Element, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.modifier.Modifier<E extends chameleon.core.modifier.Modifier, P extends chameleon.core.element.Element>
	c6583 [label=<<table title="chameleon.core.modifier.Modifier" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../modifier/Modifier.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Modifier&lt;E extends Modifier, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c6591 [label=<<table title="chameleon.core.namespace.NamespaceOrType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespace/NamespaceOrType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> NamespaceOrType&lt;E extends NamespaceOrType&lt;E, P, S, F&gt;, P extends DeclarationContainer, S extends Signature, F extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6593 [label=<<table title="chameleon.core.namespace.NamespaceElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespace/NamespaceElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> NamespaceElement&lt;E extends Element, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.reference.CrossReference<E extends chameleon.core.reference.CrossReference, P extends chameleon.core.element.Element, D extends chameleon.core.declaration.Declaration>
	c6613 [label=<<table title="chameleon.core.reference.CrossReference" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../reference/CrossReference.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> CrossReference&lt;E extends CrossReference, P extends Element, D extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element>
	c6629 [label=<<table title="chameleon.core.statement.ExceptionSource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../statement/ExceptionSource.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ExceptionSource&lt;E extends ExceptionSource, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.variable.VariableContainer<E extends chameleon.core.variable.VariableContainer, P extends chameleon.core.element.Element>
	c6675 [label=<<table title="chameleon.core.variable.VariableContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../variable/VariableContainer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> VariableContainer&lt;E extends VariableContainer, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.variable.Variable<E extends chameleon.core.variable.Variable<E, P, F>, P extends chameleon.core.declaration.DeclarationContainer, F extends chameleon.core.variable.Variable>
	c6677 [label=<<table title="chameleon.core.variable.Variable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../variable/Variable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Variable&lt;E extends Variable&lt;E, P, F&gt;, P extends DeclarationContainer, F extends Variable&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6527:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.declaration.Declaration<E extends chameleon.core.declaration.Declaration<E, P, S, D>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, D extends chameleon.core.declaration.Declaration> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6528:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.element.ElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6529:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.expression.Assignable<E extends chameleon.core.expression.Assignable, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6543:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.method.exception.AnchoredDeclaration<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6581:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.modifier.Modifier<E extends chameleon.core.modifier.Modifier, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6583:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6591:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration> implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6527:p -> c6591:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6593:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.reference.CrossReference<E extends chameleon.core.reference.CrossReference, P extends chameleon.core.element.Element, D extends chameleon.core.declaration.Declaration> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6613:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6629:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.variable.VariableContainer<E extends chameleon.core.variable.VariableContainer, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6675:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.variable.VariableContainer<E extends chameleon.core.variable.VariableContainer, P extends chameleon.core.element.Element> implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6527:p -> c6675:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.variable.Variable<E extends chameleon.core.variable.Variable<E, P, F>, P extends chameleon.core.declaration.DeclarationContainer, F extends chameleon.core.variable.Variable> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6530:p -> c6677:p [dir=back,arrowtail=empty,style=dashed];
}

