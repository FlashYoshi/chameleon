#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c23068 [label=<<table title="chameleon.core.element.Element" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../element/Element.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Element&lt;E extends Element, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.expression.InvocationTarget<E extends chameleon.core.expression.InvocationTarget, P extends chameleon.core.element.Element>
	c23077 [label=<<table title="chameleon.core.expression.InvocationTarget" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../expression/InvocationTarget.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> InvocationTarget&lt;E extends InvocationTarget, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.statement.Statement<E extends chameleon.core.statement.Statement>
	c23165 [label=<<table title="chameleon.core.statement.Statement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Statement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Statement&lt;E extends Statement&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element>
	c23167 [label=<<table title="chameleon.core.statement.ExceptionSource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ExceptionSource.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ExceptionSource&lt;E extends ExceptionSource, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.Type
	c23181 [label=<<table title="chameleon.core.type.Type" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/Type.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Type </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.variable.RegularVariable<E extends chameleon.core.variable.RegularVariable<E, P, F>, P extends chameleon.core.declaration.DeclarationContainer, F extends chameleon.core.variable.Variable>
	c23216 [label=<<table title="chameleon.core.variable.RegularVariable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../variable/RegularVariable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> RegularVariable&lt;E extends RegularVariable&lt;E, P, F&gt;, P extends DeclarationContainer, F extends Variable&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//chameleon.core.expression.InvocationTarget<E extends chameleon.core.expression.InvocationTarget, P extends chameleon.core.element.Element> implements chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element>
	c23167:p -> c23077:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.statement.Statement<E extends chameleon.core.statement.Statement> implements chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element>
	c23167:p -> c23165:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c23068:p -> c23167:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.Type implements chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element>
	c23167:p -> c23181:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.variable.RegularVariable<E extends chameleon.core.variable.RegularVariable<E, P, F>, P extends chameleon.core.declaration.DeclarationContainer, F extends chameleon.core.variable.Variable> implements chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element>
	c23167:p -> c23216:p [dir=back,arrowtail=empty,style=dashed];
}

