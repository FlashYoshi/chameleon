#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// chameleon.core.type.generics.WildCardType
	c3641 [label=<<table title="chameleon.core.type.generics.WildCardType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WildCardType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> WildCardType </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeParameterBlock
	c3642 [label=<<table title="chameleon.core.type.generics.TypeParameterBlock" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TypeParameterBlock.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TypeParameterBlock </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeParameterBlock.Stub
	c3643 [label=<<table title="chameleon.core.type.generics.TypeParameterBlock.Stub" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TypeParameterBlock.Stub.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Stub </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeParameter<E extends chameleon.core.type.generics.TypeParameter<E>>
	c3644 [label=<<table title="chameleon.core.type.generics.TypeParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TypeParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> TypeParameter&lt;E extends TypeParameter&lt;E&gt;&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeConstraintWithReferences<E extends chameleon.core.type.generics.TypeConstraintWithReferences>
	c3645 [label=<<table title="chameleon.core.type.generics.TypeConstraintWithReferences" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TypeConstraintWithReferences.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> TypeConstraintWithReferences&lt;E extends TypeConstraintWithReferences&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeConstraint<E extends chameleon.core.type.generics.TypeConstraint>
	c3646 [label=<<table title="chameleon.core.type.generics.TypeConstraint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TypeConstraint.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> TypeConstraint&lt;E extends TypeConstraint&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.SuperWildCardType
	c3647 [label=<<table title="chameleon.core.type.generics.SuperWildCardType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SuperWildCardType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SuperWildCardType </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.SuperWildCard
	c3648 [label=<<table title="chameleon.core.type.generics.SuperWildCard" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SuperWildCard.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SuperWildCard </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.SuperConstraint
	c3649 [label=<<table title="chameleon.core.type.generics.SuperConstraint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SuperConstraint.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SuperConstraint </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.PureWildCardType
	c3650 [label=<<table title="chameleon.core.type.generics.PureWildCardType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PureWildCardType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PureWildCardType </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.PureWildCard
	c3651 [label=<<table title="chameleon.core.type.generics.PureWildCard" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PureWildCard.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PureWildCard </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.InstantiatedTypeParameter
	c3652 [label=<<table title="chameleon.core.type.generics.InstantiatedTypeParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./InstantiatedTypeParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> InstantiatedTypeParameter </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.InstantiatedTypeParameter.ActualType
	c3653 [label=<<table title="chameleon.core.type.generics.InstantiatedTypeParameter.ActualType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./InstantiatedTypeParameter.ActualType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ActualType </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.FormalTypeParameter
	c3654 [label=<<table title="chameleon.core.type.generics.FormalTypeParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FormalTypeParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FormalTypeParameter </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.FormalTypeParameter.LazyTypeAlias
	c3655 [label=<<table title="chameleon.core.type.generics.FormalTypeParameter.LazyTypeAlias" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FormalTypeParameter.LazyTypeAlias.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LazyTypeAlias </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.ExtendsWildcardType
	c3656 [label=<<table title="chameleon.core.type.generics.ExtendsWildcardType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ExtendsWildcardType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ExtendsWildcardType </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.ExtendsWildCard
	c3657 [label=<<table title="chameleon.core.type.generics.ExtendsWildCard" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ExtendsWildCard.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ExtendsWildCard </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.ExtendsConstraint
	c3658 [label=<<table title="chameleon.core.type.generics.ExtendsConstraint" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ExtendsConstraint.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ExtendsConstraint </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.CapturedTypeParameter
	c3659 [label=<<table title="chameleon.core.type.generics.CapturedTypeParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CapturedTypeParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CapturedTypeParameter </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.BasicTypeArgument
	c3660 [label=<<table title="chameleon.core.type.generics.BasicTypeArgument" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BasicTypeArgument.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BasicTypeArgument </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.ActualTypeArgument<E extends chameleon.core.type.generics.ActualTypeArgument>
	c3661 [label=<<table title="chameleon.core.type.generics.ActualTypeArgument" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ActualTypeArgument.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ActualTypeArgument&lt;E extends ActualTypeArgument&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//chameleon.core.type.generics.TypeConstraintWithReferences<E extends chameleon.core.type.generics.TypeConstraintWithReferences> extends chameleon.core.type.generics.TypeConstraint<E>
	c3646:p -> c3645:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.SuperWildCardType extends chameleon.core.type.generics.WildCardType
	c3641:p -> c3647:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.SuperWildCard extends chameleon.core.type.generics.ActualTypeArgument<chameleon.core.type.generics.SuperWildCard>
	c3661:p -> c3648:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.SuperConstraint extends chameleon.core.type.generics.TypeConstraintWithReferences<chameleon.core.type.generics.SuperConstraint>
	c3645:p -> c3649:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.PureWildCardType extends chameleon.core.type.generics.WildCardType
	c3641:p -> c3650:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.PureWildCard extends chameleon.core.type.generics.ActualTypeArgument<chameleon.core.type.generics.PureWildCard>
	c3661:p -> c3651:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.InstantiatedTypeParameter extends chameleon.core.type.generics.TypeParameter<chameleon.core.type.generics.InstantiatedTypeParameter>
	c3644:p -> c3652:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.FormalTypeParameter extends chameleon.core.type.generics.TypeParameter<chameleon.core.type.generics.FormalTypeParameter>
	c3644:p -> c3654:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.ExtendsWildcardType extends chameleon.core.type.generics.WildCardType
	c3641:p -> c3656:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.ExtendsWildCard extends chameleon.core.type.generics.ActualTypeArgument<chameleon.core.type.generics.ExtendsWildCard>
	c3661:p -> c3657:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.ExtendsConstraint extends chameleon.core.type.generics.TypeConstraintWithReferences<chameleon.core.type.generics.ExtendsConstraint>
	c3645:p -> c3658:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.CapturedTypeParameter extends chameleon.core.type.generics.FormalTypeParameter
	c3654:p -> c3659:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.BasicTypeArgument extends chameleon.core.type.generics.ActualTypeArgument<chameleon.core.type.generics.BasicTypeArgument>
	c3661:p -> c3660:p [dir=back,arrowtail=empty];
}

