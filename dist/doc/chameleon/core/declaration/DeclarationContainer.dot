#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// chameleon.core.declaration.StubDeclarationContainer<T extends chameleon.core.declaration.Declaration>
	c6022 [label=<<table title="chameleon.core.declaration.StubDeclarationContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./StubDeclarationContainer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StubDeclarationContainer&lt;T extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026 [label=<<table title="chameleon.core.declaration.DeclarationContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./DeclarationContainer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> DeclarationContainer&lt;E extends DeclarationContainer, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6029 [label=<<table title="chameleon.core.element.Element" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../element/Element.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Element&lt;E extends Element, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.method.Method<E extends chameleon.core.method.Method<E, H, S, M>, H extends chameleon.core.method.MethodHeader<H, E, S>, S extends chameleon.core.method.MethodSignature, M extends chameleon.core.method.Method>
	c6073 [label=<<table title="chameleon.core.method.Method" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../method/Method.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Method&lt;E extends Method&lt;E, H, S, M&gt;, H extends MethodHeader&lt;H, E, S&gt;, S extends MethodSignature, M extends Method&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c6090 [label=<<table title="chameleon.core.namespace.NamespaceOrType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespace/NamespaceOrType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> NamespaceOrType&lt;E extends NamespaceOrType&lt;E, P, S, F&gt;, P extends DeclarationContainer, S extends Signature, F extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.Namespace
	c6094 [label=<<table title="chameleon.core.namespace.Namespace" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespace/Namespace.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Namespace </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespacepart.NamespacePart
	c6097 [label=<<table title="chameleon.core.namespacepart.NamespacePart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespacepart/NamespacePart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NamespacePart </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.Type
	c6142 [label=<<table title="chameleon.core.type.Type" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/Type.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Type </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.ClassBody
	c6149 [label=<<table title="chameleon.core.type.ClassBody" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/ClassBody.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassBody </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeParameterBlock
	c6151 [label=<<table title="chameleon.core.type.generics.TypeParameterBlock" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/generics/TypeParameterBlock.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TypeParameterBlock </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeParameterBlock.Stub
	c6152 [label=<<table title="chameleon.core.type.generics.TypeParameterBlock.Stub" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/generics/TypeParameterBlock.Stub.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Stub </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.variable.VariableContainer<E extends chameleon.core.variable.VariableContainer, P extends chameleon.core.element.Element>
	c6174 [label=<<table title="chameleon.core.variable.VariableContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../variable/VariableContainer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> VariableContainer&lt;E extends VariableContainer, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//chameleon.core.declaration.StubDeclarationContainer<T extends chameleon.core.declaration.Declaration> implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026:p -> c6022:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6029:p -> c6026:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.method.Method<E extends chameleon.core.method.Method<E, H, S, M>, H extends chameleon.core.method.MethodHeader<H, E, S>, S extends chameleon.core.method.MethodSignature, M extends chameleon.core.method.Method> implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026:p -> c6073:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6029:p -> c6090:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration> implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026:p -> c6090:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespace.Namespace implements chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c6090:p -> c6094:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespace.Namespace implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026:p -> c6094:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespacepart.NamespacePart implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026:p -> c6097:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.Type implements chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c6090:p -> c6142:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.Type implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026:p -> c6142:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.ClassBody implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026:p -> c6149:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.generics.TypeParameterBlock implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026:p -> c6151:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.generics.TypeParameterBlock.Stub implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026:p -> c6152:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.variable.VariableContainer<E extends chameleon.core.variable.VariableContainer, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c6029:p -> c6174:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.variable.VariableContainer<E extends chameleon.core.variable.VariableContainer, P extends chameleon.core.element.Element> implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c6026:p -> c6174:p [dir=back,arrowtail=empty,style=dashed];
}

