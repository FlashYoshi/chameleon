#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// chameleon.core.declaration.TargetDeclaration<E extends chameleon.core.declaration.TargetDeclaration<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c25398 [label=<<table title="chameleon.core.declaration.TargetDeclaration" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../declaration/TargetDeclaration.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> TargetDeclaration&lt;E extends TargetDeclaration&lt;E, P, S, F&gt;, P extends DeclarationContainer, S extends Signature, F extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.declaration.Definition<E extends chameleon.core.declaration.Definition<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c25402 [label=<<table title="chameleon.core.declaration.Definition" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../declaration/Definition.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Definition&lt;E extends Definition&lt;E, P, S, F&gt;, P extends DeclarationContainer, S extends Signature, F extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c25403 [label=<<table title="chameleon.core.declaration.DeclarationContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../declaration/DeclarationContainer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> DeclarationContainer&lt;E extends DeclarationContainer, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.member.FixedSignatureMember<E extends chameleon.core.member.FixedSignatureMember<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.member.Member>
	c25442 [label=<<table title="chameleon.core.member.FixedSignatureMember" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../member/FixedSignatureMember.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> FixedSignatureMember&lt;E extends FixedSignatureMember&lt;E, P, S, F&gt;, P extends DeclarationContainer, S extends Signature, F extends Member&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c25467 [label=<<table title="chameleon.core.namespace.NamespaceOrType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespace/NamespaceOrType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> NamespaceOrType&lt;E extends NamespaceOrType&lt;E, P, S, F&gt;, P extends DeclarationContainer, S extends Signature, F extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element>
	c25505 [label=<<table title="chameleon.core.statement.ExceptionSource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../statement/ExceptionSource.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ExceptionSource&lt;E extends ExceptionSource, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.VariableOrType<E extends chameleon.core.type.VariableOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c25512 [label=<<table title="chameleon.core.type.VariableOrType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VariableOrType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> VariableOrType&lt;E extends VariableOrType&lt;E, P, S, F&gt;, P extends DeclarationContainer, S extends Signature, F extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.TypeIndirection
	c25515 [label=<<table title="chameleon.core.type.TypeIndirection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TypeIndirection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> TypeIndirection </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.Type
	c25519 [label=<<table title="chameleon.core.type.Type" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Type.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Type </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.RegularType
	c25522 [label=<<table title="chameleon.core.type.RegularType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RegularType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RegularType </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.IntersectionType
	c25523 [label=<<table title="chameleon.core.type.IntersectionType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./IntersectionType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> IntersectionType </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.WildCardType
	c25527 [label=<<table title="chameleon.core.type.generics.WildCardType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./generics/WildCardType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> WildCardType </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration> implements chameleon.core.declaration.TargetDeclaration<E extends chameleon.core.declaration.TargetDeclaration<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c25398:p -> c25467:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration> implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c25403:p -> c25467:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.TypeIndirection extends chameleon.core.type.Type
	c25519:p -> c25515:p [dir=back,arrowtail=empty];
	//chameleon.core.type.Type extends chameleon.core.member.FixedSignatureMember<chameleon.core.type.Type, chameleon.core.declaration.DeclarationContainer, chameleon.core.declaration.SimpleNameSignature, chameleon.core.type.Type>
	c25442:p -> c25519:p [dir=back,arrowtail=empty];
	//chameleon.core.type.Type implements chameleon.core.declaration.TargetDeclaration<E extends chameleon.core.declaration.TargetDeclaration<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c25398:p -> c25519:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.Type implements chameleon.core.namespace.NamespaceOrType<E extends chameleon.core.namespace.NamespaceOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c25467:p -> c25519:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.Type implements chameleon.core.type.VariableOrType<E extends chameleon.core.type.VariableOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c25512:p -> c25519:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.Type implements chameleon.core.declaration.Definition<E extends chameleon.core.declaration.Definition<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c25402:p -> c25519:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.Type implements chameleon.core.statement.ExceptionSource<E extends chameleon.core.statement.ExceptionSource, P extends chameleon.core.element.Element>
	c25505:p -> c25519:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.Type implements chameleon.core.declaration.DeclarationContainer<E extends chameleon.core.declaration.DeclarationContainer, P extends chameleon.core.element.Element>
	c25403:p -> c25519:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.RegularType extends chameleon.core.type.Type
	c25519:p -> c25522:p [dir=back,arrowtail=empty];
	//chameleon.core.type.IntersectionType extends chameleon.core.type.Type
	c25519:p -> c25523:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.WildCardType extends chameleon.core.type.Type
	c25519:p -> c25527:p [dir=back,arrowtail=empty];
}

