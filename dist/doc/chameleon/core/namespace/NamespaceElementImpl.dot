#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// chameleon.core.declaration.Signature<E extends chameleon.core.declaration.Signature, P extends chameleon.core.element.Element>
	c16879 [label=<<table title="chameleon.core.declaration.Signature" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../declaration/Signature.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Signature&lt;E extends Signature, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.element.ElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c16883 [label=<<table title="chameleon.core.element.ElementImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../element/ElementImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ElementImpl&lt;E extends Element, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.expression.InvocationTarget<E extends chameleon.core.expression.InvocationTarget, P extends chameleon.core.element.Element>
	c16893 [label=<<table title="chameleon.core.expression.InvocationTarget" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../expression/InvocationTarget.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> InvocationTarget&lt;E extends InvocationTarget, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.expression.ActualArgumentList
	c16898 [label=<<table title="chameleon.core.expression.ActualArgumentList" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../expression/ActualArgumentList.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ActualArgumentList </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.expression.ActualArgument
	c16899 [label=<<table title="chameleon.core.expression.ActualArgument" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../expression/ActualArgument.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ActualArgument </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.method.MethodHeader<E extends chameleon.core.method.MethodHeader, P extends chameleon.core.method.Method, S extends chameleon.core.method.MethodSignature>
	c16926 [label=<<table title="chameleon.core.method.MethodHeader" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../method/MethodHeader.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> MethodHeader&lt;E extends MethodHeader, P extends Method, S extends MethodSignature&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.method.Implementation<E extends chameleon.core.method.Implementation>
	c16929 [label=<<table title="chameleon.core.method.Implementation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../method/Implementation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Implementation&lt;E extends Implementation&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.method.exception.ExceptionDeclaration<E extends chameleon.core.method.exception.ExceptionDeclaration>
	c16933 [label=<<table title="chameleon.core.method.exception.ExceptionDeclaration" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../method/exception/ExceptionDeclaration.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ExceptionDeclaration&lt;E extends ExceptionDeclaration&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.method.exception.ExceptionClause
	c16934 [label=<<table title="chameleon.core.method.exception.ExceptionClause" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../method/exception/ExceptionClause.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ExceptionClause </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.modifier.ElementWithModifiersImpl<E extends chameleon.core.element.Element<E, P>, P extends chameleon.core.element.Element>
	c16938 [label=<<table title="chameleon.core.modifier.ElementWithModifiersImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../modifier/ElementWithModifiersImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ElementWithModifiersImpl&lt;E extends Element&lt;E, P&gt;, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.NamespaceElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c16946 [label=<<table title="chameleon.core.namespace.NamespaceElementImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./NamespaceElementImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> NamespaceElementImpl&lt;E extends Element, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c16947 [label=<<table title="chameleon.core.namespace.NamespaceElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NamespaceElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> NamespaceElement&lt;E extends Element, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespacepart.NamespacePart
	c16952 [label=<<table title="chameleon.core.namespacepart.NamespacePart" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespacepart/NamespacePart.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NamespacePart </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespacepart.Import<E extends chameleon.core.element.Element>
	c16959 [label=<<table title="chameleon.core.namespacepart.Import" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../namespacepart/Import.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Import&lt;E extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.reference.ElementReference<E extends chameleon.core.reference.ElementReference, P extends chameleon.core.element.Element, D extends chameleon.core.declaration.Declaration>
	c16966 [label=<<table title="chameleon.core.reference.ElementReference" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../reference/ElementReference.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ElementReference&lt;E extends ElementReference, P extends Element, D extends Declaration&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.statement.Statement<E extends chameleon.core.statement.Statement>
	c16981 [label=<<table title="chameleon.core.statement.Statement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../statement/Statement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Statement&lt;E extends Statement&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.StubTypeElement<E extends chameleon.core.type.StubTypeElement>
	c16999 [label=<<table title="chameleon.core.type.StubTypeElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/StubTypeElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> StubTypeElement&lt;E extends StubTypeElement&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.ClassBody
	c17004 [label=<<table title="chameleon.core.type.ClassBody" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/ClassBody.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassBody </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeParameterBlock
	c17006 [label=<<table title="chameleon.core.type.generics.TypeParameterBlock" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/generics/TypeParameterBlock.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TypeParameterBlock </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.generics.TypeParameter<E extends chameleon.core.type.generics.TypeParameter<E>>
	c17008 [label=<<table title="chameleon.core.type.generics.TypeParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/generics/TypeParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> TypeParameter&lt;E extends TypeParameter&lt;E&gt;&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.variable.VariableImpl<E extends chameleon.core.variable.VariableImpl<E, P, F>, P extends chameleon.core.declaration.DeclarationContainer, F extends chameleon.core.variable.Variable>
	c17028 [label=<<table title="chameleon.core.variable.VariableImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../variable/VariableImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> VariableImpl&lt;E extends VariableImpl&lt;E, P, F&gt;, P extends DeclarationContainer, F extends Variable&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//chameleon.core.declaration.Signature<E extends chameleon.core.declaration.Signature, P extends chameleon.core.element.Element> extends chameleon.core.namespace.NamespaceElementImpl<E, P>
	c16946:p -> c16879:p [dir=back,arrowtail=empty];
	//chameleon.core.expression.InvocationTarget<E extends chameleon.core.expression.InvocationTarget, P extends chameleon.core.element.Element> extends chameleon.core.namespace.NamespaceElementImpl<E, P>
	c16946:p -> c16893:p [dir=back,arrowtail=empty];
	//chameleon.core.expression.ActualArgumentList extends chameleon.core.namespace.NamespaceElementImpl<chameleon.core.expression.ActualArgumentList, chameleon.core.element.Element>
	c16946:p -> c16898:p [dir=back,arrowtail=empty];
	//chameleon.core.expression.ActualArgument extends chameleon.core.namespace.NamespaceElementImpl<chameleon.core.expression.ActualArgument, chameleon.core.expression.ActualArgumentList>
	c16946:p -> c16899:p [dir=back,arrowtail=empty];
	//chameleon.core.method.MethodHeader<E extends chameleon.core.method.MethodHeader, P extends chameleon.core.method.Method, S extends chameleon.core.method.MethodSignature> extends chameleon.core.namespace.NamespaceElementImpl<E, P>
	c16946:p -> c16926:p [dir=back,arrowtail=empty];
	//chameleon.core.method.Implementation<E extends chameleon.core.method.Implementation> extends chameleon.core.namespace.NamespaceElementImpl<E, chameleon.core.method.Method<?, ?, ?, ?>>
	c16946:p -> c16929:p [dir=back,arrowtail=empty];
	//chameleon.core.method.exception.ExceptionDeclaration<E extends chameleon.core.method.exception.ExceptionDeclaration> extends chameleon.core.namespace.NamespaceElementImpl<E, chameleon.core.method.exception.ExceptionClause>
	c16946:p -> c16933:p [dir=back,arrowtail=empty];
	//chameleon.core.method.exception.ExceptionClause extends chameleon.core.namespace.NamespaceElementImpl<chameleon.core.method.exception.ExceptionClause, chameleon.core.method.Method<?, ?, ?, ?>>
	c16946:p -> c16934:p [dir=back,arrowtail=empty];
	//chameleon.core.modifier.ElementWithModifiersImpl<E extends chameleon.core.element.Element<E, P>, P extends chameleon.core.element.Element> extends chameleon.core.namespace.NamespaceElementImpl<E, P>
	c16946:p -> c16938:p [dir=back,arrowtail=empty];
	//chameleon.core.namespace.NamespaceElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element> extends chameleon.core.element.ElementImpl<E, P>
	c16883:p -> c16946:p [dir=back,arrowtail=empty];
	//chameleon.core.namespace.NamespaceElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element> implements chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c16947:p -> c16946:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespacepart.NamespacePart extends chameleon.core.namespace.NamespaceElementImpl<chameleon.core.namespacepart.NamespacePart, chameleon.core.element.Element>
	c16946:p -> c16952:p [dir=back,arrowtail=empty];
	//chameleon.core.namespacepart.Import<E extends chameleon.core.element.Element> extends chameleon.core.namespace.NamespaceElementImpl<E, chameleon.core.namespacepart.NamespacePart>
	c16946:p -> c16959:p [dir=back,arrowtail=empty];
	//chameleon.core.reference.ElementReference<E extends chameleon.core.reference.ElementReference, P extends chameleon.core.element.Element, D extends chameleon.core.declaration.Declaration> extends chameleon.core.namespace.NamespaceElementImpl<E, P>
	c16946:p -> c16966:p [dir=back,arrowtail=empty];
	//chameleon.core.statement.Statement<E extends chameleon.core.statement.Statement> extends chameleon.core.namespace.NamespaceElementImpl<E, chameleon.core.element.Element>
	c16946:p -> c16981:p [dir=back,arrowtail=empty];
	//chameleon.core.type.StubTypeElement<E extends chameleon.core.type.StubTypeElement> extends chameleon.core.namespace.NamespaceElementImpl<E, chameleon.core.element.Element>
	c16946:p -> c16999:p [dir=back,arrowtail=empty];
	//chameleon.core.type.ClassBody extends chameleon.core.namespace.NamespaceElementImpl<chameleon.core.type.ClassBody, chameleon.core.namespace.NamespaceElement>
	c16946:p -> c17004:p [dir=back,arrowtail=empty];
	//chameleon.core.type.ClassBody implements chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c16947:p -> c17004:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.generics.TypeParameterBlock extends chameleon.core.namespace.NamespaceElementImpl<chameleon.core.type.generics.TypeParameterBlock, chameleon.core.type.Type>
	c16946:p -> c17006:p [dir=back,arrowtail=empty];
	//chameleon.core.type.generics.TypeParameter<E extends chameleon.core.type.generics.TypeParameter<E>> extends chameleon.core.namespace.NamespaceElementImpl<E, chameleon.core.type.generics.TypeParameterBlock>
	c16946:p -> c17008:p [dir=back,arrowtail=empty];
	//chameleon.core.variable.VariableImpl<E extends chameleon.core.variable.VariableImpl<E, P, F>, P extends chameleon.core.declaration.DeclarationContainer, F extends chameleon.core.variable.Variable> extends chameleon.core.namespace.NamespaceElementImpl<E, P>
	c16946:p -> c17028:p [dir=back,arrowtail=empty];
}

