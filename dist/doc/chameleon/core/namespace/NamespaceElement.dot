#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c17051 [label=<<table title="chameleon.core.element.Element" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../element/Element.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Element&lt;E extends Element, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.modifier.ElementWithModifiers<E extends chameleon.core.element.Element<E, P>, P extends chameleon.core.element.Element>
	c17106 [label=<<table title="chameleon.core.modifier.ElementWithModifiers" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../modifier/ElementWithModifiers.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ElementWithModifiers&lt;E extends Element&lt;E, P&gt;, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.NamespaceElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c17113 [label=<<table title="chameleon.core.namespace.NamespaceElementImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NamespaceElementImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> NamespaceElementImpl&lt;E extends Element, P extends Element&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c17114 [label=<<table title="chameleon.core.namespace.NamespaceElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./NamespaceElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> NamespaceElement&lt;E extends Element, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.VariableOrType<E extends chameleon.core.type.VariableOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration>
	c17157 [label=<<table title="chameleon.core.type.VariableOrType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/VariableOrType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> VariableOrType&lt;E extends VariableOrType&lt;E, P, S, F&gt;, P extends DeclarationContainer, S extends Signature, F extends Declaration&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.TypeElement<E extends chameleon.core.type.TypeElement<E, P>, P extends chameleon.core.element.Element>
	c17162 [label=<<table title="chameleon.core.type.TypeElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/TypeElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> TypeElement&lt;E extends TypeElement&lt;E, P&gt;, P extends Element&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// chameleon.core.type.ClassBody
	c17171 [label=<<table title="chameleon.core.type.ClassBody" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../type/ClassBody.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassBody </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//chameleon.core.modifier.ElementWithModifiers<E extends chameleon.core.element.Element<E, P>, P extends chameleon.core.element.Element> implements chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c17114:p -> c17106:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespace.NamespaceElementImpl<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element> implements chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c17114:p -> c17113:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element> implements chameleon.core.element.Element<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c17051:p -> c17114:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.VariableOrType<E extends chameleon.core.type.VariableOrType<E, P, S, F>, P extends chameleon.core.declaration.DeclarationContainer, S extends chameleon.core.declaration.Signature, F extends chameleon.core.declaration.Declaration> implements chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c17114:p -> c17157:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.TypeElement<E extends chameleon.core.type.TypeElement<E, P>, P extends chameleon.core.element.Element> implements chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c17114:p -> c17162:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.TypeElement<E extends chameleon.core.type.TypeElement<E, P>, P extends chameleon.core.element.Element> implements chameleon.core.modifier.ElementWithModifiers<E extends chameleon.core.element.Element<E, P>, P extends chameleon.core.element.Element>
	c17106:p -> c17162:p [dir=back,arrowtail=empty,style=dashed];
	//chameleon.core.type.ClassBody extends chameleon.core.namespace.NamespaceElementImpl<chameleon.core.type.ClassBody, chameleon.core.namespace.NamespaceElement>
	c17113:p -> c17171:p [dir=back,arrowtail=empty];
	//chameleon.core.type.ClassBody implements chameleon.core.namespace.NamespaceElement<E extends chameleon.core.element.Element, P extends chameleon.core.element.Element>
	c17114:p -> c17171:p [dir=back,arrowtail=empty,style=dashed];
}

